### ANALISIS 1.
#   Eliminar una por una las regulaciones de cada nodo
#   Recuperar attrs y vasijas
library(BoolNet)
net <- loadNetwork('original.txt')
foreach(c=62:65) %dopar% {
#for(c in 61:117){
start <- Sys.time()
filename <- paste(c,'.txt',sep='')
net <- loadNetwork(filename)
attr_prueba <- getAttractors(net,method='sat.exhaustive')
nombre <- paste('attr_',c,'.txt',sep='')
l <- c()
for (a in attr_prueba[2]){for (b in a){l <- c(l,b[1])}} #guardar solo los atractores
write.table(l,nombre,row.names = F,col.names = F)
end <- Sys.time()
print(paste('Finished with ',c,' - time taked: ',end-start))
}
### ANALISIS 1.
#   Eliminar una por una las regulaciones de cada nodo
#   Recuperar attrs y vasijas
library(BoolNet)
library(foreach)
library(doMC)
library(doMC)
registerDoMC(2) #my mac has 2 cores
setwd('/Users/mariana/Dropbox/redes_alfredo/red_apoptosis/analisis_1')
foreach(c=62:65) %dopar% {
#for(c in 61:117){
start <- Sys.time()
filename <- paste(c,'.txt',sep='')
net <- loadNetwork(filename)
attr_prueba <- getAttractors(net,method='sat.exhaustive')
nombre <- paste('attr_',c,'.txt',sep='')
l <- c()
for (a in attr_prueba[2]){for (b in a){l <- c(l,b[1])}} #guardar solo los atractores
write.table(l,nombre,row.names = F,col.names = F)
end <- Sys.time()
print(paste('Finished with ',c,' - time taked: ',end-start))
}
